/*
 * Code generated by github.com/wilhuang/goi18n. DO NOT EDIT.
 * version: 1.0.0
 * date: 2024-04-24
 */
package lang

import (
	"fmt"
	"strings"
)

func Join[T any](elems []T, sep string, fu ...func(elem T) string) string {
	if len(elems) == 0 {
		return ""
	}
	var tran func(elem T) string
	if len(fu) == 0 {
		if v, ok := any(elems).([]string); ok {
			return strings.Join(v, sep)
		}
		tran = func(elem T) string {
			return fmt.Sprintf("%v", elem)
		}
	} else {
		tran = fu[0]
	}
	if len(elems) == 1 {
		return tran(elems[0])
	}

	var b strings.Builder
	b.WriteString(tran(elems[0]))
	for _, s := range elems[1:] {
		b.WriteString(sep)
		b.WriteString(tran(s))
	}
	return b.String()
}
